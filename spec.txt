(* 状態遷移図のようなもの *)

状態1 (Top State)
- ユーザーに行為を選択してもらう
"何をしますか？（番号を1つ入力してください）"
  1. 記録 -> "学習時間を記録します" ---> 状態2
  2. 閲覧（直近60日間） ---> 状態6
  3. 閉じる -> プログラム終了

状態2
"記録する日付を yyyymmdd フォーマットで入力してください。(中止する場合は q)"
"例 : 2048年6月1日の場合 20480601" (ここから曜日を特定してくれるようにしたい)
  ※西暦の扱いはどうする？内部での保持はするが入力にも表示にも使わない
    1年以上前の学習時間を登録する必要性を感じないため。入力された日付の
    西暦は、それをされた日付から1年前から決めることにすれば一意に決まる。
- q ---> 状態1
- フォーマットが正しい -> 状態3
- フォーマットがおかしい -> "フォーマットが違います。やり直してください。"; ---> 状態2

状態3
"データを参照しています。"
  日付が1行ずつ新しい順に格納された log.txt を探索する。
  - 同じ日付が存在した場合 ---> 状態4
  - 同じ日付が存在しなかった場合 ---> 状態5
  
状態4
"指定された日付の記録が既に存在しますが、上書きしますか？ y/n";
- y の場合 ---> 状態5
- n の場合 ---> 状態1
- それ以外 -> "y か n を押してください。"

状態5
"学習時間を 0.5 時間単位で入力してください。"
"例 : 1時間半 -> 1.5,  3時間 -> 3.0 or 3"
">"
- フォーマットが正しい場合 ->
    "データを記録しています";
    log.txt に記録;
    データを記録しました ---> 状態6
- フォーマットがおかしい場合 ->
    "フォーマットが違います。やり直してください。"; ---> 状態5


状態6
・log.txt から直近60日のデータを読み出して
2月2日 |▮▮▮▮▮▮▮▮▮▮▮▮▮▮▮ 7.5
のように出力する。---> 状態1
? log.txt の中身も直接このフォーマットにした方が手っ取り早いか


(* 改善点 *)
データを格納している log.txt はただのテキストファイルなので、
簡単にいじって壊しやすい。データベースとか使うの？
